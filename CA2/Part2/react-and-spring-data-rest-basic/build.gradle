plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.4'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.siouan.frontend-jdk17" version "8.0.0"
	id 'com.github.node-gradle.node' version '3.1.1'
}

group = 'com.greglturnquist'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

frontend {
	nodeVersion = "16.20.2"
	assembleScript = "run build"
	cleanScript = "run clean"
	checkScript = "run check"
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

task copyJarToDist(type: Copy) {
	// Ensure the 'dist' folder is created if it doesn't exist
	doFirst {
		mkdir 'dist'
	}

	// Specifies that this task depends on the 'jar' task
	dependsOn jar

	// Specifies the source of the JAR file. Adjust the path as necessary.
	// For example, if you are using the standard 'java' plugin, the JAR is usually generated in 'build/libs'.
	from jar.archivePath

	// Defines the destination for the copied JAR file
	into 'dist'
}


/*node {
	version = '14.17.0'
	npmVersion = '6.14.13'
	download = true
	workDir = file("${project.buildDir}/nodejs")
	npmWorkDir = file("${project.buildDir}/npm")
	nodeModulesDir = file("${project.projectDir}")
}

task npmInstall(type: NpmTask) {
	args = ['install']
}

task npmBuild(type: NpmTask) {
	args = ['run', 'build'] // 'build' deve ser um script definido no seu package.json
}*/


task cleanWebpack(type: Delete) {
	delete "$projectDir/src/main/resources/static/built"
}

clean.dependsOn cleanWebpack

